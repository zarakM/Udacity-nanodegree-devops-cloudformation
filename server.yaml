Description:
    Cloudformation use to create a stack according to cloud nanodegree project two requirement, Developed by Muhammad zarak.

Resources:
    WebAppInstances:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            AutoScalingGroupName: WebApplicationAutoScalingGroup
            Cooldown: "200"
            # VPCZoneIdentifier:
            #     - Fn::ImportValue:
            #         !Sub "${EnvironmentName}-PRIV-NETS"
            LaunchConfigurationName:
                Ref: InstanceLaunchConfig
            MinSize: "1"
            MaxSize: "3"
            DesiredCapacity: "2"
            TargetGroupARNs:
                - Ref: ApplicationTargetGroup

    InstanceLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash 
                    sudo apt-get update -y
                    sudo apt-get install apache2 -y
                    sudo systemctl start apache2.service
                    cd /var/www/html
                    sudo rm index.html
                    sudo wget -P . https://udacity-lesson3.s3-us-west-2.amazonaws.com/index.html
            ImageId: "ami-003634241a8fcdec0"
            SecurityGroups:
                - Ref: ApplicationSecurityGroup
            InstanceType: "t2.medium"
            BlockDeviceMappings:
                - DeviceName: "/dev/sdk"
                  Ebs:
                    VolumeSize: '20'

    ApplicationLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Subnets:
            - #Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
            - #Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
            SecurityGroups:
            - Ref: LoadBalancerSecurityGroup
    
    ALBListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
            - Type: forward
            TargetGroupArn:
                Ref: ApplicationTargetGroup
            LoadBalancerArn: !Ref ApplicationLoadBalancer
            Port: '80'
            Protocol: HTTP

    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            Actions:
            - Type: forward
              TargetGroupArn: !Ref 'ApplicationTargetGroup'
            Conditions:
            - Field: path-pattern
              Values: [/]
            ListenerArn: !Ref 'ALBListener'
            Priority: 1

    ApplicationTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 20
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            Port: 80
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 3
            Protocol: HTTP
            UnhealthyThresholdCount: 3
            VpcId:
              Fn::ImportValue:
                Fn::Sub: #"${EnvironmentName}-VPCID"

    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow HTTP Traffic to Load Balancer to port 80
            VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0

    ApplicationSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
          GroupDescription: hosts and SSH allowed to local
          VpcId:
            Fn::ImportValue:
              !Sub "${EnvironmentName}-VPCID"
          SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 20
            ToPort: 20
            CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 0
            ToPort: 65535
            CidrIp: 0.0.0.0/0